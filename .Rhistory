plot(train$avg_pitch_arm, col=train$classe)
plot(train$min_pitch_arm, col=train$classe)
plot(train$max_pitch_arm, col=train$classe)
plot(train$var_pitch_arm, col=train$classe)
plot(train$stddev_pitch_arm, col=train$classe)
plot(train$skewness_pitch_arm, col=train$classe)
plot(train$kurtosis_picth_arm, col=train$classe)
plot(train$amplitude_pitch_arm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$pitch_arm, col=train$classe)
plot(train$avg_pitch_arm, col=train$classe)
plot(train$min_pitch_arm, col=train$classe)
plot(train$max_picth_arm, col=train$classe)
plot(train$var_pitch_arm, col=train$classe)
plot(train$stddev_pitch_arm, col=train$classe)
plot(train$skewness_pitch_arm, col=train$classe)
plot(train$kurtosis_picth_arm, col=train$classe)
plot(train$amplitude_pitch_arm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$yaw_arm, col=train$classe)
plot(train$avg_yaw_arm, col=train$classe)
plot(train$min_yaw_arm, col=train$classe)
plot(train$max_yaw_arm, col=train$classe)
plot(train$var_yaw_arm, col=train$classe)
plot(train$stddev_yaw_arm, col=train$classe)
plot(train$skewness_yaw_arm, col=train$classe)
plot(train$kurtosis_yaw_arm, col=train$classe)
plot(train$amplitude_yaw_arm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$roll_forearm, col=train$classe)
plot(train$avg_roll_forearm, col=train$classe)
plot(train$min_roll_forearm, col=train$classe)
plot(train$max_roll_forearm, col=train$classe)
plot(train$var_roll_forearm, col=train$classe)
plot(train$stddev_roll_forearm, col=train$classe)
plot(train$skewness_roll_forearm, col=train$classe)
plot(train$kurtosis_roll_forearm, col=train$classe)
plot(train$amplitude_roll_forearm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$pitch_forearm, col=train$classe)
plot(train$avg_pitch_forearm, col=train$classe)
plot(train$min_pitch_forearm, col=train$classe)
plot(train$max_picth_forearm, col=train$classe)
plot(train$var_pitch_forearm, col=train$classe)
plot(train$stddev_pitch_forearm, col=train$classe)
plot(train$skewness_pitch_forearm, col=train$classe)
plot(train$kurtosis_picth_forearm, col=train$classe)
plot(train$amplitude_pitch_forearm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$yaw_forearm, col=train$classe)
plot(train$avg_yaw_forearm, col=train$classe)
plot(train$min_yaw_forearm, col=train$classe)
plot(train$max_yaw_forearm, col=train$classe)
plot(train$var_yaw_forearm, col=train$classe)
plot(train$stddev_yaw_forearm, col=train$classe)
plot(train$skewness_yaw_forearm, col=train$classe)
plot(train$kurtosis_yaw_forearm, col=train$classe)
plot(train$amplitude_yaw_forearm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$roll_dumbbell, col=train$classe)
plot(train$avg_roll_dumbbell, col=train$classe)
plot(train$min_roll_dumbbell, col=train$classe)
plot(train$max_roll_dumbbell, col=train$classe)
plot(train$var_roll_dumbbell, col=train$classe)
plot(train$stddev_roll_dumbbell, col=train$classe)
plot(train$skewness_roll_dumbbell, col=train$classe)
plot(train$kurtosis_roll_dumbbell, col=train$classe)
plot(train$amplitude_roll_dumbbell, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$pitch_dumbbel, col=train$classe)
plot(train$avg_pitch_dumbbel, col=train$classe)
plot(train$min_pitch_dumbbel, col=train$classe)
plot(train$max_picth_dumbbel, col=train$classe)
plot(train$var_pitch_dumbbel, col=train$classe)
plot(train$stddev_pitch_dumbbel, col=train$classe)
plot(train$skewness_pitch_dumbbel, col=train$classe)
plot(train$kurtosis_picth_dumbbel, col=train$classe)
plot(train$amplitude_pitch_dumbbel, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(3,3), mar=c(5,4,1,1))
plot(train$yaw_dumbbell, col=train$classe)
plot(train$avg_yaw_dumbbell, col=train$classe)
plot(train$min_yaw_dumbbell, col=train$classe)
plot(train$max_yaw_dumbbell, col=train$classe)
plot(train$var_yaw_dumbbell, col=train$classe)
plot(train$stddev_yaw_dumbbell, col=train$classe)
plot(train$skewness_yaw_dumbbell, col=train$classe)
plot(train$kurtosis_yaw_dumbbell, col=train$classe)
plot(train$amplitude_yaw_dumbbell, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(4,4), mar=c(5,4,1,1))
plot(train$roll_belt, col=train$classe)
plot(train$avg_roll_belt, col=train$classe)
plot(train$min_roll_belt, col=train$classe)
plot(train$max_roll_belt, col=train$classe)
plot(train$var_roll_belt, col=train$classe)
plot(train$stddev_roll_belt, col=train$classe)
plot(train$skewness_roll_belt, col=train$classe)
plot(train$kurtosis_roll_belt, col=train$classe)
plot(train$amplitude_roll_belt, col=train$classe)
plot(train$avg_pitch_belt, col=train$classe)
plot(train$min_pitch_belt, col=train$classe)
plot(train$max_picth_belt, col=train$classe)
plot(train$var_pitch_belt, col=train$classe)
plot(train$stddev_pitch_belt, col=train$classe)
plot(train$skewness_roll_belt.1, col=train$classe)
plot(train$kurtosis_picth_belt, col=train$classe)
plot(train$amplitude_pitch_belt, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(4,4), mar=c(5,4,1,1))
plot(train$avg_roll_belt, col=train$classe)
plot(train$min_roll_belt, col=train$classe)
plot(train$max_roll_belt, col=train$classe)
plot(train$var_roll_belt, col=train$classe)
plot(train$stddev_roll_belt, col=train$classe)
plot(train$skewness_roll_belt, col=train$classe)
plot(train$kurtosis_roll_belt, col=train$classe)
plot(train$amplitude_roll_belt, col=train$classe)
plot(train$avg_pitch_belt, col=train$classe)
plot(train$min_pitch_belt, col=train$classe)
plot(train$max_picth_belt, col=train$classe)
plot(train$var_pitch_belt, col=train$classe)
plot(train$stddev_pitch_belt, col=train$classe)
plot(train$skewness_roll_belt.1, col=train$classe)
plot(train$kurtosis_picth_belt, col=train$classe)
plot(train$amplitude_pitch_belt, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,5), mar=c(5,4,1,1))
plot(train$avg_roll_belt, col=train$classe)
plot(train$min_roll_belt, col=train$classe)
plot(train$max_roll_belt, col=train$classe)
plot(train$var_roll_belt, col=train$classe)
plot(train$stddev_roll_belt, col=train$classe)
plot(train$skewness_roll_belt, col=train$classe)
plot(train$kurtosis_roll_belt, col=train$classe)
plot(train$amplitude_roll_belt, col=train$classe)
plot(train$avg_pitch_belt, col=train$classe)
plot(train$min_pitch_belt, col=train$classe)
plot(train$max_picth_belt, col=train$classe)
plot(train$stddev_pitch_belt, col=train$classe)
plot(train$var_pitch_belt, col=train$classe)
plot(train$skewness_roll_belt.1, col=train$classe)
plot(train$kurtosis_picth_belt, col=train$classe)
plot(train$amplitude_pitch_belt, col=train$classe)
plot(train$avg_yaw_belt, col=train$classe)
plot(train$min_yaw_belt, col=train$classe)
plot(train$max_yaw_belt, col=train$classe)
plot(train$var_yaw_belt, col=train$classe)
plot(train$stddev_yaw_belt, col=train$classe)
plot(train$skewness_yaw_belt, col=train$classe)
plot(train$amplitude_yaw_belt, col=train$classe)
plot(train$kurtosis_yaw_belt, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,5), mar=c(5,4,1,1))
plot(train$avg_roll_arm, col=train$classe)
plot(train$min_roll_arm, col=train$classe)
plot(train$max_roll_arm, col=train$classe)
plot(train$var_roll_arm, col=train$classe)
plot(train$stddev_roll_arm, col=train$classe)
plot(train$skewness_roll_arm, col=train$classe)
plot(train$kurtosis_roll_arm, col=train$classe)
plot(train$amplitude_roll_arm, col=train$classe)
plot(train$avg_pitch_arm, col=train$classe)
plot(train$min_pitch_arm, col=train$classe)
plot(train$max_picth_arm, col=train$classe)
plot(train$var_pitch_arm, col=train$classe)
plot(train$stddev_pitch_arm, col=train$classe)
plot(train$skewness_pitch_arm, col=train$classe)
plot(train$kurtosis_picth_arm, col=train$classe)
plot(train$amplitude_pitch_arm, col=train$classe)
plot(train$avg_yaw_arm, col=train$classe)
plot(train$min_yaw_arm, col=train$classe)
plot(train$max_yaw_arm, col=train$classe)
plot(train$var_yaw_arm, col=train$classe)
plot(train$stddev_yaw_arm, col=train$classe)
plot(train$skewness_yaw_arm, col=train$classe)
plot(train$kurtosis_yaw_arm, col=train$classe)
plot(train$amplitude_yaw_arm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,5), mar=c(5,4,1,1))
plot(train$avg_roll_forearm, col=train$classe)
plot(train$min_roll_forearm, col=train$classe)
plot(train$max_roll_forearm, col=train$classe)
plot(train$var_roll_forearm, col=train$classe)
plot(train$stddev_roll_forearm, col=train$classe)
plot(train$kurtosis_roll_forearm, col=train$classe)
plot(train$amplitude_roll_forearm, col=train$classe)
plot(train$min_pitch_forearm, col=train$classe)
plot(train$max_picth_forearm, col=train$classe)
plot(train$var_pitch_forearm, col=train$classe)
plot(train$stddev_pitch_forearm, col=train$classe)
plot(train$skewness_pitch_forearm, col=train$classe)
plot(train$kurtosis_picth_forearm, col=train$classe)
plot(train$amplitude_pitch_forearm, col=train$classe)
plot(train$avg_yaw_forearm, col=train$classe)
plot(train$min_yaw_forearm, col=train$classe)
plot(train$max_yaw_forearm, col=train$classe)
plot(train$var_yaw_forearm, col=train$classe)
plot(train$stddev_yaw_forearm, col=train$classe)
plot(train$skewness_yaw_forearm, col=train$classe)
plot(train$kurtosis_yaw_forearm, col=train$classe)
plot(train$avg_pitch_forearm, col=train$classe)
plot(train$skewness_roll_forearm, col=train$classe)
plot(train$amplitude_yaw_forearm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,5), mar=c(5,4,1,1))
plot(train$avg_roll_dumbbell, col=train$classe)
plot(train$min_roll_dumbbell, col=train$classe)
plot(train$max_roll_dumbbell, col=train$classe)
plot(train$stddev_roll_dumbbell, col=train$classe)
plot(train$kurtosis_roll_dumbbell, col=train$classe)
plot(train$avg_pitch_dumbbell, col=train$classe)
plot(train$min_pitch_dumbbell, col=train$classe)
plot(train$var_pitch_dumbbell, col=train$classe)
plot(train$stddev_pitch_dumbbell, col=train$classe)
plot(train$skewness_pitch_dumbbell, col=train$classe)
plot(train$kurtosis_picth_dumbbell, col=train$classe)
plot(train$avg_yaw_dumbbell, col=train$classe)
plot(train$max_yaw_dumbbell, col=train$classe)
plot(train$var_yaw_dumbbell, col=train$classe)
plot(train$stddev_yaw_dumbbell, col=train$classe)
plot(train$skewness_yaw_dumbbell, col=train$classe)
plot(train$kurtosis_yaw_dumbbell, col=train$classe)
plot(train$amplitude_yaw_dumbbell, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
plot(train$max_picth_dumbbell, col=train$classe)
plot(train$min_yaw_dumbbell, col=train$classe)
plot(train$var_roll_dumbbell, col=train$classe)
plot(train$amplitude_pitch_dumbbell, col=train$classe)
plot(train$amplitude_roll_dumbbell, col=train$classe)
plot(train$skewness_roll_dumbbell, col=train$classe)
par(mfrow = c(5,3), mar=c(5,4,1,1))
plot(train$accel_belt_x, col=train$classe)
plot(train$accel_belt_y, col=train$classe)
plot(train$accel_belt_z, col=train$classe)
plot(train$total_accel_belt, col=train$classe)
plot(train$var_total_accel_belt, col=train$classe)
plot(train$var_total_accel_belt, col=train$classe)
plot(train$gyros_belt_x, col=train$classe)
plot(train$gyros_belt_y, col=train$classe)
plot(train$gyros_belt_z, col=train$classe)
plot(train$magnet_belt_x, col=train$classe)
plot(train$magnet_belt_y, col=train$classe)
plot(train$magnet_belt_z, col=train$classe)
plot(train$roll_belt, col=train$classe)
plot(train$pitch_belt, col=train$classe)
plot(train$yaw_belt, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,3), mar=c(5,4,1,1))
plot(train$accel_arm_x, col=train$classe)
plot(train$accel_arm_y, col=train$classe)
plot(train$accel_arm_z, col=train$classe)
plot(train$total_accel_arm, col=train$classe)
plot(train$var_accel_arm, col=train$classe)
plot(train$var_accel_arm, col=train$classe)
plot(train$gyros_arm_x, col=train$classe)
plot(train$gyros_arm_y, col=train$classe)
plot(train$gyros_arm_z, col=train$classe)
plot(train$magnet_arm_x, col=train$classe)
plot(train$magnet_arm_y, col=train$classe)
plot(train$magnet_arm_z, col=train$classe)
plot(train$roll_arm, col=train$classe)
plot(train$pitch_arm, col=train$classe)
plot(train$yaw_arm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,3), mar=c(5,4,1,1))
plot(train$accel_forearm_x, col=train$classe)
plot(train$accel_forearm_y, col=train$classe)
plot(train$accel_forearm_z, col=train$classe)
plot(train$total_accel_forearm, col=train$classe)
plot(train$var_accel_forearm, col=train$classe)
plot(train$var_accel_forearm, col=train$classe)
plot(train$gyros_forearm_x, col=train$classe)
plot(train$gyros_forearm_y, col=train$classe)
plot(train$gyros_forearm_z, col=train$classe)
plot(train$magnet_forearm_x, col=train$classe)
plot(train$magnet_forearm_y, col=train$classe)
plot(train$magnet_forearm_z, col=train$classe)
plot(train$roll_forearm, col=train$classe)
plot(train$pitch_forearm, col=train$classe)
plot(train$yaw_forearm, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
par(mfrow = c(5,3), mar=c(5,4,1,1))
plot(train$accel_dumbbell_x, col=train$classe)
plot(train$accel_dumbbell_y, col=train$classe)
plot(train$accel_dumbbell_z, col=train$classe)
plot(train$total_accel_dumbbell, col=train$classe)
plot(train$var_accel_dumbbell, col=train$classe)
plot(train$var_accel_dumbbell, col=train$classe)
plot(train$gyros_dumbbell_x, col=train$classe)
plot(train$gyros_dumbbell_y, col=train$classe)
plot(train$gyros_dumbbell_z, col=train$classe)
plot(train$magnet_dumbbell_x, col=train$classe)
plot(train$magnet_dumbbell_y, col=train$classe)
plot(train$magnet_dumbbell_z, col=train$classe)
plot(train$roll_dumbbell, col=train$classe)
plot(train$pitch_dumbbell, col=train$classe)
plot(train$yaw_dumbbell, col=train$classe)
legend("topleft", legend = unique(train$classe), col = unique(train$classe), pch=1)
train1 = subset(train, select=c("total_accel_belt","var_total_accel_belt"))
train1 = subset(train, select=c("total_accel_belt","var_total_accel_belt","gyros_belt_x",
"gyros_belt_z","magnet_belt_x","magnet_belt_y","var_accel_arm",
"gyros_arm_y","var_accel_dumbbell","var_accel_forearm","roll_arm",
"pitch_forearm","min_pitch_belt","var_pitch_belt","var_roll_dumbbell",
"var_yaw_dumbbell","min_roll_forearm","var_pitch_forearm"))
summary(train1)
apply(is.na(train),2,sum)
sort(apply(is.na(train),2,sum))
sort(-apply(is.na(train),2,sum))
order(apply(is.na(train),2,sum))
?sort
sort(apply(is.na(train),2,sum), decreaseing=TRUE)
sort(apply(is.na(train),2,sum), decreasing=TRUE)
View(train1)
table(apply(is.na(train),2,sum))
train = read.csv("./pml-training.csv")
table(apply(is.na(train),2,sum))
test = read.csv("./pml-testing.csv")
table(apply(is.na(test),2,sum)
)
which(apply(is.na(train),2,sum))
apply(is.na(train),2,sum)
which(apply(is.na(train),2,sum)>0)
colnames(train[,18])
colname(train[,18])
colnames(train[,19])
which(apply(is.na(train),2,sum)=19216)
which(apply(is.na(train),2,sum)==19216)
colnames(train)
which(apply(is.na(train),2,sum) > 0)
which(apply(is.na(train),2,sum) == 0)
train1 = subset(train, select=which(apply(is.na(train),2,sum) == 0))
test1 = subset(test, select=which(apply(is.na(train),2,sum) == 0))
par(mfrow = c(5,5), mar=c(5,4,1,1))
for(i in 1:25){
plot(train1[,i], col=train1$classe)
}
?plot
colnames(train1[,2])
colnames(train1[2])
colnames(train1[1])
colnames(train1[3])
par(mfrow = c(5,5), mar=c(5,4,1,1))
for(i in 1:25){
plot(train1[,i], col=train1$classe, xlab=colnames(train1[i]))
}
par(mfrow = c(5,5), mar=c(5,4,1,1))
for(i in 1:25){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(10,10), mar=c(5,4,1,1))
for(i in 2:93){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(5,5), mar=c(5,4,1,1))
for(i in 1:25){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
par(mfrow = c(7,7), mar=c(5,4,1,1))
for(i in 1:49){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(5,4,1,1))
for(i in 50:93){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(5,3,1,1))
for(i in 1:49){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(5,4,0.5,0.5))
for(i in 1:49){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(5,4,0.1,0.1))
for(i in 2:50){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
?par
par(mfrow = c(7,7), mar=c(5,1,1,1))
for(i in 51:92){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(1,5,1,1))
for(i in 51:92){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(1,3,1,1))
for(i in 51:92){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(1,4,1,1))
for(i in 2:50){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(7,7), mar=c(1,4,1,1))
for(i in 51:92){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
plot(train1$roll_belt, col=train1$classe)
par(mfrow = c(3,4), mar=c(5,4,1,1))
plot(train1$roll_belt, col=train1$classe)
plot(train1$pitch_belt, col=train1$classe)
plot(train1$total_accel_belt, col=train1$classe)
plot(train1$gyros_belt_y, col=train1$classe)
plot(train1$gyros_belt_z, col=train1$classe)
plot(train1$accel_belt_x, col=train1$classe)
plot(train1$accel_belt_y, col=train1$classe)
plot(train1$accel_belt_z, col=train1$classe)
plot(train1$magnet_belt_x, col=train1$classe)
plot(train1$magnet_belt_y, col=train1$classe)
plot(train1$gyros_belt_x, col=train1$classe)
plot(train1$magnet_belt_z, col=train1$classe)
plot(train1$gyros_arm_x, col=train1$classe)
plot(train1$accel_dumbbell_x, col=train1$classe)
plot(train1$accel_dumbbell_y, col=train1$classe)
plot(train1$gyros_dumbbell_y, col=train1$classe)
plot(train1$pitch_forearm, col=train1$classe)
par(mfrow = c(4,4), mar=c(5,4,1,1))
plot(train1$roll_belt, col=train1$classe)
plot(train1$pitch_belt, col=train1$classe)
plot(train1$total_accel_belt, col=train1$classe)
plot(train1$gyros_belt_x, col=train1$classe)
plot(train1$gyros_belt_y, col=train1$classe)
plot(train1$gyros_belt_z, col=train1$classe)
plot(train1$accel_belt_x, col=train1$classe)
plot(train1$accel_belt_y, col=train1$classe)
plot(train1$accel_belt_z, col=train1$classe)
plot(train1$magnet_belt_x, col=train1$classe)
plot(train1$magnet_belt_y, col=train1$classe)
plot(train1$magnet_belt_z, col=train1$classe)
plot(train1$gyros_arm_x, col=train1$classe)
plot(train1$accel_dumbbell_x, col=train1$classe)
plot(train1$accel_dumbbell_y, col=train1$classe)
plot(train1$pitch_forearm, col=train1$classe)
legend("topleft", legend = unique(train1$classe), col = unique(train1$classe), pch=1)
usedVariables = c("roll_belt","pitch_belt")
usedVariables = c("roll_belt","pitch_belt","total_accel_belt","gyros_belt_x","gyros_belt_y",
"gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x",
"magnet_belt_y","magnet_belt_z","gyros_arm_x","accel_dumbbell_x",
"accel_dumbbell_y","pitch_forearm")
par(mfrow = c(4,4), mar=c(5,4,1,1))
for(i in usedVariable){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
par(mfrow = c(4,4), mar=c(5,4,1,1))
for(i in usedVariables){
plot(train1[,i], col=train1$classe, ylab=colnames(train1[i]))
}
legend("topleft", legend = unique(train1$classe), col = unique(train1$classe), pch=1)
train1 = subset(train, select = usedVariables)
library(ElemStatLearn)
data(ozone, package="ElemStatLearn")
ozone = ozone[order(ozone$ozone),]
head(ozone)
ll = matrix(NA, nrow=10, ncol=155)
for(i in 1:10){
ss = sample(1:dim(ozone)[1], replace=T)
ozone0 = ozone[ss,]; ozone0 = ozone0[order(ozone0$ozone),]
loess0 = loess(temperature ~ ozone, data=ozone0, span=0.2)
ll[i,] = predict(loess0, newdata=data.frame(ozone=1:155))
}
plot(ozone$ozone, ozone$temperature, pch=19, cex=0.5)
for(i in 1:10){lines(1:155, ll[i,], col="grey", lwd=2)}
lines(1:155, apply(ll,2,mean), col="red", lwd=2)
data(iris)
library(ggplot2)
inTrain = createDataPartition(y=iris$Species, p=0.7, list=FALSE)
training = iris[inTrain,]
testing = iris[-inTrain,]
library(caret)
modFit = train(Species ~ ., data=training, method="rf", prox=TRUE)
inTrain = createDataPartition(y=iris$Species, p=0.7, list=FALSE)
training = iris[inTrain,]
testing = iris[-inTrain,]
modFit = train(Species ~ ., data=training, method="rf", prox=TRUE)
modFit
getTree(modFit$finalModel, k=2)
irisP = classCenter(training[,c(3,4)], training$Species,
modFit$finalModel$prox)
irisP = as.data.frame(irisP); irisP$Species = rownames(irisP)
p = qplot(Petal.Width, Petal.Length, col=Species, data=training)
p + geom_point(aes(x=Petal.Width, y=Petal.Length, col=Species),
size=5, shape=4, data=irisP)
pred = predict(modFit, testing)
testing$predRight = pred==testing$Species
table(pred, testing$Species)
qplot(Petal.Width, Petal.Length, colour=predRight, data=testing,
main="newdata Predictions")
train = read.csv("./pml-training.csv")
test = read.csv("./pml-testing.csv")
train1 = subset(train, select=which(apply(is.na(train),2,sum) == 0))
test1 = subset(test, select=which(apply(is.na(train),2,sum) == 0))
usedVariables = c("roll_belt","pitch_belt","total_accel_belt","gyros_belt_x","gyros_belt_y",
"gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x",
"magnet_belt_y","magnet_belt_z","gyros_arm_x","accel_dumbbell_x",
"accel_dumbbell_y","pitch_forearm")
train2 = subset(train, select = usedVariables)
test2 = subset(test1. select = usedVariables)
test2 = subset(test1m select = usedVariables)
test2 = subset(test1, select = usedVariables)
library(caret)
train2 = subset(train1, select = c(usedVariables,"classe")
)
test2 = subset(test1, select = c(usedVariables,"classe"))
modFit = train(classe ~ ., data=train2, method="rf", prox=TRUE)
